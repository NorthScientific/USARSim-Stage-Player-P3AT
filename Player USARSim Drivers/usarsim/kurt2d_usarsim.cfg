driver
(
 name "usarsim"
 modul "bot"
 plugin "libUsarsim"
 provides ["simulation:0"]
 port 3000
 host "127.0.0.1"
 pos [1.5 1.0 0.2]
 rot [0 0 0]
 bot "USARBot.KURT2D"
 botname "kurt"
)

###############################################################################
# ranger                                                                      #
###############################################################################
driver
(
  name "usarsim"
  modul "laser"
  provides ["laser:0"]
  requires ["simulation:0"]
  laser_name "Scanner1"
)

###############################################################################
# odometry data global(3) and local(4)                                        #
###############################################################################
driver
(
  name "usarsim"
  modul "fakelocalize"
  provides ["global:::position2d:2" "odom:::position2d:1"]
  requires ["simulation:0"]
  #max_error [0.05 0.05 0.02]
)

###############################################################################
# robot control                                                               #
###############################################################################
driver
(
  name "usarsim"
  modul "position2d"
  provides ["command:::position2d:0" ]
  requires ["simulation:0"]
  odo_name "Odometry"
  max_angle_diff 0.017
)

###############################################################################
# map                                                                         #
###############################################################################
#driver
#(
#    name "mapfile"
#    provides ["map:0"]
#    filename "maps/uos.pgm"
#    resolution 0.05
#    origin [-16.21 -32.62]
#)

###############################################################################
# monte carlo localization                                                    #
###############################################################################
#driver
#(
#  name "amcl"
#  provides ["localize:0" "position2d:4"]
#  requires ["odometry:::position2d:1" "laser:0" "laser:::map:0"]
#  init_pose [0.0 8.0 0.0]
#  init_pose_var [0.3 0.3 6.2]
#  update_thresh [0.05 3]

#  odom_drift[0] [0.1 0.0 0.0]
#  odom_drift[1] [0.0 0.1 0.0]
#  odom_drift[2] [0.05 0.05 0.1]
#  laser_max_beams 18
#)

###############################################################################
# vector field histogram obstacle avoidance                                   #
###############################################################################
#driver
#(
#  name "vfh"
#  provides ["position2d:3"]
#  requires ["position2d:0" "laser:0"]
#  distance_epsilon 0.3
#  angle_epsilon 5
#)
###############################################################################
# vector field histogram obstacle avoidance                                   #
###############################################################################
#driver
#(
#  name "nd"
#  provides ["position2d:3"]
#  requires ["output:::position2d:0" "input:::position2d:1" "laser:0"]
#
#  max_speed [0.3 30.0]
#  min_speed [0.1 10.0]
#  goal_tol [0.3 15.0]
#  wait_on_stall 1
#
#  rotate_stuck_time 5.0
#  translate_stuck_time 5.0
#  translate_stuck_dist 0.15
#  translate_stuck_angle 10.0
#
#  avoid_dist 0.4
#  safety_dist 0.0

#  laser_buffer 1
#)
###############################################################################
# wavefront path planner                                                      #
###############################################################################
#driver
#(
#  name "wavefront"
#  provides ["planner:0"]
#  requires ["output:::position2d:3" "input:::position2d:4" "map:0"]
#  replan_dist_thresh -1
#)
